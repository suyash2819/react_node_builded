{"version":3,"sources":["Components/Results.js","Components/Loader.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Results","props","data","result","Table","striped","bordered","hover","variant","map","number","status","reason","rollnumber","value","Loader","className","Spinner","animation","Home","useState","rollNumbers","setRollNumbers","results","setResults","loader","setLoader","onSubmit","e","preventDefault","axios","post","then","getResults","trim","split","type","name","onChange","target","placeholder","style","display","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SA2CeA,G,MAvCC,SAACC,GAAW,IAEpBC,EADaD,EAAXE,OACYD,KACpB,OACE,qCACE,iCACE,2CAEF,iCACE,eAACE,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,UACE,gCACE,+BACE,6CACA,6CAGJ,gCACGN,EAAKO,KAAI,SAACC,GACT,MAAsB,aAAlBA,EAAOC,OAEP,6BACE,6BAAKD,EAAOE,UADLF,EAAOG,YAMlB,+BACE,6BAAKH,EAAOI,MAAMD,aAClB,6BAAKH,EAAOI,MAAMX,WAFXO,EAAOG,2B,QCfjBE,G,MAXA,WACb,OACE,mCACE,sBAAKC,UAAU,gBAAf,UACE,4CACA,cAACC,EAAA,EAAD,CAASC,UAAU,SAASV,QAAQ,mBC2D7BW,MA7Df,WAAiB,IAAD,EACwBC,mBAAS,IADjC,mBACPC,EADO,KACMC,EADN,OAEgBF,mBAAS,MAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGcJ,mBAAS,IAHvB,mBAGPK,EAHO,KAGCC,EAHD,KA0Bd,MAAe,QAAXD,EACK,cAAC,EAAD,IAGLF,EAAgB,cAAC,EAAD,CAASpB,OAAQoB,IAGnC,qCACE,iCACE,sDAEF,qBAAKP,UAAU,UAAf,SACE,iCACE,uBAAMW,SApBO,SAACC,GACpBA,EAAEC,iBAfe,SAAC3B,GAClB4B,IACGC,KAAK,uCAAwC,CAAE7B,SAC/C8B,MAAK,SAAC7B,GACLqB,EAAWrB,GACXuB,EAAU,YAYdO,CAPmBZ,EAAYa,OAAOC,MAAM,MAQ5CT,EAAU,QAgBJ,UACE,uBACEU,KAAK,OACLC,KAAK,OACLC,SAAU,SAACV,GAAD,OAAON,EAAeM,EAAEW,OAAOzB,QACzC0B,YAAY,uBAEd,uBACA,uBACA,uBACEJ,KAAK,SACLtB,MAAM,SACN2B,MAAO,CAAEC,QAAS,SAClB1B,UAAU,4BCpDT2B,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.284ce7a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"../CSS/results.css\";\r\n\r\nconst Results = (props) => {\r\n  const { result } = props;\r\n  const data = result.data;\r\n  return (\r\n    <>\r\n      <center>\r\n        <h1>Results</h1>\r\n      </center>\r\n      <center>\r\n        <Table striped bordered hover variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Roll Number</th>\r\n              <th>Result</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((number) => {\r\n              if (number.status === \"rejected\") {\r\n                return (\r\n                  <tr key={number.rollnumber}>\r\n                    <td>{number.reason}</td>\r\n                  </tr>\r\n                );\r\n              }\r\n              return (\r\n                <tr key={number.rollnumber}>\r\n                  <td>{number.value.rollnumber}</td>\r\n                  <td>{number.value.result}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </center>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"../CSS/loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <>\r\n      <div className=\"loaderDisplay\">\r\n        <h1>Loading...</h1>\r\n        <Spinner animation=\"border\" variant=\"primary\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../CSS/home.css\";\r\nimport Results from \"./Results\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction Home() {\r\n  const [rollNumbers, setRollNumbers] = useState(\"\");\r\n  const [results, setResults] = useState(null);\r\n  const [loader, setLoader] = useState(\"\");\r\n\r\n  const getResults = (data) => {\r\n    axios\r\n      .post(\"https://fetch-results.herokuapp.com/\", { data })\r\n      .then((result) => {\r\n        setResults(result);\r\n        setLoader(\"unset\");\r\n      });\r\n  };\r\n\r\n  const dataFilter = () => {\r\n    var filtereddata = rollNumbers.trim().split(\",\");\r\n    return filtereddata;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    var data = dataFilter();\r\n    getResults(data);\r\n    setLoader(\"set\");\r\n  };\r\n\r\n  if (loader === \"set\") {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (results) return <Results result={results} />;\r\n\r\n  return (\r\n    <>\r\n      <center>\r\n        <h1>Get Your Results !</h1>\r\n      </center>\r\n      <div className=\"formdiv\">\r\n        <center>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={(e) => setRollNumbers(e.target.value)}\r\n              placeholder=\"Enter roll numbers\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              style={{ display: \"block\" }}\r\n              className=\"btn btn-info\"\r\n            />\r\n          </form>\r\n        </center>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport Home from \"./Components/Home\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
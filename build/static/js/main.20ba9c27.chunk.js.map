{"version":3,"sources":["Components/Results.js","Components/Loader.js","Components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Results","props","result","console","log","Table","striped","bordered","hover","variant","map","number","data","rollnumber","Loader","className","Spinner","animation","Home","useState","rollNumbers","setRollNumbers","results","setResults","loader","setLoader","promises","onSubmit","e","preventDefault","trim","split","forEach","isNaN","parseInt","alert","push","axios","post","getResults","Promise","all","then","values","type","name","onChange","target","value","placeholder","style","display","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAkCeA,G,MA9BC,SAACC,GAAW,IAClBC,EAAWD,EAAXC,OAER,OADAC,QAAQC,IAAIF,GAEV,qCACE,iCACE,2CAEF,iCACE,eAACG,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,QAAQ,OAAtC,UACE,gCACE,+BACE,6CACA,6CAGJ,gCACGP,EAAOQ,KAAI,SAACC,GAAD,OACV,+BACE,6BAAKA,EAAOC,KAAKC,aACjB,6BAAKF,EAAOC,KAAKV,WAFVS,EAAOC,KAAKC,2B,QCPpBC,G,MAXA,WACb,OACE,mCACE,sBAAKC,UAAU,gBAAf,UACE,4CACA,cAACC,EAAA,EAAD,CAASC,UAAU,SAASR,QAAQ,mBCoE7BS,MAtEf,SAASA,IAAQ,IAAD,EACwBC,mBAAS,IADjC,mBACPC,EADO,KACMC,EADN,OAEgBF,mBAAS,MAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGcJ,mBAAS,IAHvB,mBAGPK,EAHO,KAGCC,EAHD,KAKVC,EAAW,GA8Bf,MAAe,QAAXF,EACK,cAAC,EAAD,IAGLF,EAAgB,cAAC,EAAD,CAASpB,OAAQoB,IAGnC,qCACE,iCACE,sDAEF,qBAAKP,UAAU,UAAf,SACE,iCACE,uBAAMY,SAhCO,SAACC,GACpBA,EAAEC,iBACF,IAAIjB,EANeQ,EAAYU,OAAOC,MAAM,KAQ5CN,EAAU,OACVb,EAAKoB,SAAQ,SAACnB,GACZ,GAAIoB,MAAMC,SAASrB,IAEjB,OADAsB,MAAMtB,EAAa,6BACZ,cAACK,EAAD,KAjBM,SAACL,GAClBa,EAASU,KAAKC,IAAMC,KAAK,yBAA0B,CAAEzB,gBAkBnD0B,CAAWL,SAASrB,OAGtB2B,QAAQC,IAAIf,GAAUgB,MAAK,SAACC,GAC1BpB,EAAWoB,GACXlB,EAAU,aAiBN,UACE,uBACEmB,KAAK,OACLC,KAAK,OACLC,SAAU,SAAClB,GAAD,OAAOP,EAAeO,EAAEmB,OAAOC,QACzCC,YAAY,uBAEd,uBACA,uBACA,uBACEL,KAAK,SACLI,MAAM,SACNE,MAAO,CAAEC,QAAS,SAClBpC,UAAU,4BC7DTqC,MAJf,WACE,OAAO,cAAC,EAAD,KCQMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.20ba9c27.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport \"../CSS/results.css\";\r\n\r\nconst Results = (props) => {\r\n  const { result } = props;\r\n  console.log(result);\r\n  return (\r\n    <>\r\n      <center>\r\n        <h1>Results</h1>\r\n      </center>\r\n      <center>\r\n        <Table striped bordered hover variant=\"dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Roll Number</th>\r\n              <th>Result</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {result.map((number) => (\r\n              <tr key={number.data.rollnumber}>\r\n                <td>{number.data.rollnumber}</td>\r\n                <td>{number.data.result}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </center>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport \"../CSS/loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <>\r\n      <div className=\"loaderDisplay\">\r\n        <h1>Loading...</h1>\r\n        <Spinner animation=\"border\" variant=\"primary\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../CSS/home.css\";\r\nimport Results from \"./Results\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction Home() {\r\n  const [rollNumbers, setRollNumbers] = useState(\"\");\r\n  const [results, setResults] = useState(null);\r\n  const [loader, setLoader] = useState(\"\");\r\n\r\n  let promises = [];\r\n\r\n  const getResults = (rollnumber) => {\r\n    promises.push(axios.post(\"http://localhost:9000/\", { rollnumber }));\r\n  };\r\n\r\n  const dataFilter = () => {\r\n    var filtereddata = rollNumbers.trim().split(\",\");\r\n    return filtereddata;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    var data = dataFilter();\r\n\r\n    setLoader(\"set\");\r\n    data.forEach((rollnumber) => {\r\n      if (isNaN(parseInt(rollnumber))) {\r\n        alert(rollnumber + \" is not valid Roll Number\");\r\n        return <Home />;\r\n      }\r\n      getResults(parseInt(rollnumber));\r\n    });\r\n\r\n    Promise.all(promises).then((values) => {\r\n      setResults(values);\r\n      setLoader(\"unset\");\r\n    });\r\n  };\r\n\r\n  if (loader === \"set\") {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (results) return <Results result={results} />;\r\n\r\n  return (\r\n    <>\r\n      <center>\r\n        <h1>Get Your Results !</h1>\r\n      </center>\r\n      <div className=\"formdiv\">\r\n        <center>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={(e) => setRollNumbers(e.target.value)}\r\n              placeholder=\"Enter roll numbers\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Submit\"\r\n              style={{ display: \"block\" }}\r\n              className=\"btn btn-info\"\r\n            />\r\n          </form>\r\n        </center>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport Home from \"./Components/Home\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}